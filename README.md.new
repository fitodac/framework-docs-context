# Servidor MCP de Documentaci√≥n Frameworks

Este es un servidor MCP (Model Context Protocol) optimizado que proporciona acceso a la documentaci√≥n de m√∫ltiples frameworks de desarrollo web.

## ‚ú® Caracter√≠sticas

- **Recursos**: Acceso a la documentaci√≥n Markdown de 5 frameworks
- **Detecci√≥n autom√°tica**: Identifica qu√© framework est√°s consultando
- **B√∫squeda optimizada**: Devuelve fragmentos relevantes, no archivos completos
- **Sistema de prioridades**: Identifica los documentos m√°s importantes
- **Alto rendimiento**: Maneja grandes vol√∫menes de documentaci√≥n eficientemente

## Instalaci√≥n

```bash
npm install
```

## Uso

### Ejecutar el servidor
```bash
npm start
```

### Configuraci√≥n en tu cliente MCP
Agrega esto a tu configuraci√≥n MCP:

```json
{
  "mcpServers": {
    "framework-docs": {
      "command": "node",
      "args": ["/ruta/a/tu/mcp/mcp.js"],
      "cwd": "/ruta/a/tu/mcp"
    }
  }
}
```

## Herramientas Disponibles

### 1. `smart_search` ‚≠ê
B√∫squeda inteligente con detecci√≥n autom√°tica de framework.

**Par√°metros:**
- `query` (string): Consulta natural (ej: "cu√°l es la √∫ltima versi√≥n de Laravel")

**Ejemplos:**
```
- "¬øCu√°l es la √∫ltima versi√≥n de Laravel?"
- "C√≥mo crear un m√≥dulo en Twill"
- "Next.js server components"
- "Tailwind dark mode configuration"
```

### 2. `search_docs`
B√∫squeda optimizada con fragmentos relevantes.

**Par√°metros:**
- `query` (string): T√©rmino de b√∫squeda
- `framework` (string, opcional): Framework espec√≠fico

### 3. `get_full_content` üìÑ
Obtiene el contenido completo de un archivo espec√≠fico.

**Par√°metros:**
- `framework` (string): Nombre del framework
- `file_path` (string): Ruta relativa del archivo

### 4. `list_frameworks`
Lista todos los frameworks disponibles.

### 5. `list_sections`
Lista las secciones de un framework espec√≠fico.

**Par√°metros:**
- `framework` (string): Nombre del framework

### 6. `get_section`
Obtiene el contenido de una secci√≥n (optimizado a los 5 archivos m√°s relevantes).

**Par√°metros:**
- `framework` (string): Nombre del framework
- `section` (string): Nombre de la secci√≥n

## Optimizaciones Implementadas

### üîç Sistema de Prioridades
- **Alta prioridad (10)**: index.md, getting-started, installation, configuration
- **Media-alta (8)**: modules, routing, controllers, models
- **Media (5)**: forms, database, authentication, components
- **Baja (2)**: otros archivos

### üìã Extracci√≥n de Fragmentos Relevantes
En lugar de mostrar archivos completos, el servidor extrae los fragmentos m√°s relevantes para tu consulta, reduciendo la sobrecarga de contexto.

### üéØ Detecci√≥n Autom√°tica de Framework
Reconoce +80 palabras clave para identificar autom√°ticamente el framework que est√°s consultando.

## Frameworks Disponibles

- **Laravel**: Framework PHP completo
- **Twill**: CMS basado en Laravel
- **Next.js**: Framework React para renderizado h√≠brido
- **Inertia.js**: Framework para SPAs sin APIs
- **Tailwind CSS**: Framework CSS utilitario

## Troubleshooting

Si encuentras problemas:

1. Aseg√∫rate de que todas las carpetas de frameworks existen
2. Verifica que hay archivos .md en cada carpeta
3. Comprueba que las rutas en el c√≥digo apuntan a tus directorios correctos
